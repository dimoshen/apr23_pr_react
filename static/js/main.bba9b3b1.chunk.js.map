{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","categoryFromServer","user","usersFromServer","userFromServer","App","useState","filteredUserName","setFilteredUserName","selectedCategories","setSelectedCategories","query","setQuery","filterByNameHandler","filteredProducts","filter","toLowerCase","includes","length","trimmedQuery","trim","className","href","onClick","isSelected","classNames","type","placeholder","value","onChange","event","target","filterByCategoryHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bba9b3b1.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(categoryFromServer => product.categoryId === categoryFromServer.id); // find by product.categoryId\n  const user = usersFromServer\n    .find(userFromServer => userFromServer.id === category.ownerId); // find by category.ownerId\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [filteredUserName, setFilteredUserName] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const filterByNameHandler = (name) => {\n    setFilteredUserName(name);\n  };\n\n  const filterByCategoryHandler = (title) => {\n    if (selectedCategories.includes(title)) {\n      // eslint-disable-next-line max-len\n      setSelectedCategories(selectedCategories.filter(category => category !== title));\n\n      return;\n    }\n\n    setSelectedCategories([...selectedCategories, title]);\n  };\n\n  const queryChangeHandler = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const resetFiltersHandler = () => {\n    setFilteredUserName('');\n    setSelectedCategories([]);\n    setQuery('');\n  };\n\n  const filteredProducts = products\n    // eslint-disable-next-line max-len\n    .filter(product => product.user.name.toLowerCase().includes(filteredUserName.toLowerCase()))\n    // eslint-disable-next-line max-len\n    .filter(product => selectedCategories.length === 0 || selectedCategories.includes(product.category.title))\n    .filter((product) => {\n      const trimmedQuery = query.trim().toLowerCase();\n      const { name, category, user } = product;\n\n      return (\n        name.toLowerCase().includes(trimmedQuery)\n        || category.title.toLowerCase().includes(trimmedQuery)\n        || user.name.toLowerCase().includes(trimmedQuery)\n      );\n    });\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => filterByNameHandler('')}\n              >\n                All\n              </a>\n\n              {usersFromServer.map((user) => {\n                const { name, id } = user;\n                const isSelected = name === filteredUserName;\n\n                return (\n                  <a\n                    key={id}\n                    data-cy=\"FilterUser\"\n                    href=\"#/\"\n                    onClick={() => filterByNameHandler(name)}\n                    className={classNames({\n                      'is-active': isSelected,\n                    })}\n                  >\n                    {name}\n                  </a>\n                );\n              })}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={queryChangeHandler}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  <button\n                    data-cy=\"ClearButton\"\n                    type=\"button\"\n                    className=\"delete\"\n                    onClick={() => setQuery('')}\n                  />\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={classNames('button mr-2 my-1', {\n                  'is-info': selectedCategories.length === 0,\n                })}\n                onClick={() => setSelectedCategories([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map((category) => {\n                const { title } = category;\n                const isSelected = selectedCategories.includes(title);\n\n                return (\n                  <a\n                    data-cy=\"Category\"\n                    className={classNames('button mr-2 my-1', {\n                      'is-info': isSelected,\n                    })}\n                    href=\"#/\"\n                    onClick={() => filterByCategoryHandler(title)}\n                  >\n                    {title}\n                  </a>\n                );\n              })}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => resetFiltersHandler()}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          <table\n            data-cy=\"ProductTable\"\n            className=\"table is-striped is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    ID\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Product\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Category\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    User\n\n                    <a href=\"#/\">\n                      <span className=\"icon\">\n                        <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {filteredProducts.length > 0\n                ? (\n                  filteredProducts.map((product) => {\n                    const { name, user, category } = product;\n\n                    return (\n                      <tr data-cy=\"Product\" key={product.id}>\n                        <td\n                          className=\"has-text-weight-bold\"\n                          data-cy=\"ProductId\"\n                        >\n                          {product.id}\n                        </td>\n                        <td data-cy=\"ProductName\">{name}</td>\n                        <td data-cy=\"ProductCategory\">\n                          {category.icon}\n                          {' '}\n                          -\n                          {' '}\n                          {category.title}\n                        </td>\n                        <td data-cy=\"ProductUser\" className=\"has-text-link\">\n                          {user.name}\n                        </td>\n                      </tr>\n                    );\n                  })\n                )\n                : `No products matching selected criteria`\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}